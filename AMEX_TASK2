//Calculate the length of longest string from an array of String form by concatenation so that no two letters are repeated
// you can also use imports, for example:
 import java.util.*;
// you can write to stdout for debugging purposes, e.g.
// System.out.println("this is a debug message");

class Solution {
    public int solution(String[] A) {
        return solve(A, 0 , 0, new HashMap<>());
    }

    int solve(String[] arr, int usedChar, int index, HashMap<String, Integer> cache){
        if(index == arr.length){
            return 0;
        }
        String key = usedChar +","+index;
        if(cache.containsKey(key))
        return cache.get(key);
        int currUsedChar = 0;
        String s = arr[index];
        boolean valid = true;
        for(int i = 0; i < s.length(); i++){
        if((currUsedChar & (1 << (s.charAt(i) - 'a'))) == 0) {
                currUsedChar |=(1<<(s.charAt(i)-'a'));
            }else {
                valid = false;
                break;
            }
        }
        int output = 0;
        output = solve(arr, usedChar, index+1, cache);
        if(valid && (usedChar & currUsedChar) == 0){
            output = Math.max(output, s.length()+solve(arr, (usedChar |currUsedChar), index+1, cache));
        }
        cache.put(key, output);
        return output;
    }
}
